<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:view="view.*" layout="absolute"
	horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="creationCompleteHandler(event)">
	
	<mx:Style source="style/main.css"/>
	
	<mx:Script>
		<![CDATA[
			import model.Connector;
			
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import view.VVideo;
			//--------------------------------------
			// PRIVATE PROPERTIES
			//--------------------------------------
			
			[Bindable]
			/**
			 * The main data model and controller instance.
			 */
			private var connector:Connector = new Connector();
			
			private var _lastStatus:String;
			
			//--------------------------------------
			// GETTERS/SETTERS
			//--------------------------------------
			
			public function get lastStatus():String
			{
				return _lastStatus;
			}
			
			public function set lastStatus(value:String):void
			{
				_lastStatus = value;
				trace("lastStatus=" + value);
			}
			
			//--------------------------------------
			// PRIVATE METHODS
			//--------------------------------------
			
			private function creationCompleteHandler(event:Event):void 
			{
				applyParameters();
				installJavaScriptAPI();

				if (connector.gatewayURL != null && connector.sipURL != null)
					connector.connect();
			}
			
			private function applyParameters():void
			{
			//	Alert.show(this.parameters);
				VVideo.mic = Microphone.getEnhancedMicrophone();
				connector.authName = "200";
				connector.authPass = "password";
				connector.displayName = "200!!!!!!!!!!!!!!!!!!!!!!!!";
				connector.gatewayURL = "rtmp://192.168.0.102/sip";
				connector.sipURL="200@192.168.0.103";
				connector.targetURL = "100@192.168.0.103";
				connector.codecs="pcmu pcma";
			}
			
			
			
			private function installJavaScriptAPI():void
			{
                try {
    				ExternalInterface.addCallback("connect",  connector.connect);
    				ExternalInterface.addCallback("disconnect", connector.disconnect);
    				ExternalInterface.addCallback("invite", connector.invite);
    				ExternalInterface.addCallback("bye",    connector.bye);
                }
                catch (e:Error) {
                    trace('error ' + e.message);
                }
   			}
   			
			private function bufferingHandler(event:ContextMenuEvent):void
			{
				var buffering:ContextMenuItem = event.currentTarget as ContextMenuItem;
				if (buffering != null) {
					connector.bufferTime = buffering.caption == _("Add play buffering") ? 0.1 : 0.0;
					buffering.caption = connector.bufferTime == 0.0 ? _("Add play buffering") : _("Remove play buffering");
				}
			}
			
		]]>
	</mx:Script>
    
    <view:VVideo id="video" width="100%" height="100%" connector="{connector}"/>
    
</mx:Application>
